{"version":3,"file":"static/js/142.8e69cabf.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectLoadinStatus = state => state.contacts.isLoading;\nexport const selectErrorStatus = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectFiltredContacts = createSelector(\n    [selectFilter, selectContacts],\n\n    (filter, contacts) => { \n        if (!filter) {\n            return contacts;\n        };\n\n        return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n    },\n);","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 20px;\n    padding: 10px;\n    border: 2px solid darkgray;\n`;\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 20px;\n`;\n\nexport const LabelName = styled.span`\n   margin-bottom: 20px;\n   font-weight: bold;\n`;\n\nexport const Input = styled.input`\n    width: 300px;\n    height: 30px;\n`;\n\nexport const Button = styled.button`\n    width: 120px;\n    height: 40px;\n    border: 2px solid darkgray;\n    border-radius: 4px;\n    cursor: pointer;\n    font-weight: bold;    \n    color: white;\n    background-color: green;\n    border: 2px solid transparent; \n\n      &:hover {\n        box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n    }\n`;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { selectContacts } from \"redux/contacts/contactsSelectors\";\nimport { addContact } from \"redux/contacts/contactThunk\";\nimport { toast } from \"react-toastify\";\nimport { Form, Label, LabelName, Input, Button } from \"components/ContactForm/ContactForm.styled\";\n\nconst contactInList = (contacts, name, phone) => { \n    let nameFinded = null;\n\n    if (contacts) {\n        nameFinded = contacts.find(contact => { \n            if (contact.name.toLowerCase() === name.toLowerCase() && contact.phone === phone) {\n                return contact.name;\n            };\n            return undefined;\n        });\n    };\n\n    if (nameFinded) {\n        const notifyError = (message) => toast.error(message);\n        notifyError(`${nameFinded.name} is alredy in contacts.`);\n    }\n    \n    return nameFinded;\n}\n\nexport const ContactForm = () => {\n    const contacts = useSelector(selectContacts);\n    const dispatch = useDispatch();\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        const form = event.target;\n        const name = form.elements.name.value; \n        const phone = form.elements.phone.value; \n\n        if (contactInList(contacts, name, phone)) { \n            return;\n        }\n\n        dispatch(addContact({ name, phone }));\n        const notifyInfo = (message) => toast.info(message);\n        notifyInfo(`Added contact \"${name}\"`);\n        form.reset();\n    };\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Label>\n                <LabelName>\n                    Name  \n                </LabelName>\n                <Input\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                />\n            </Label>\n            <Label>\n                <LabelName>\n                    Phone number\n                </LabelName>        \n                <Input\n                    type=\"tel\"\n                    name=\"phone\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                />\n            </Label>\n            <Button \n                type=\"submit\">\n                Add contact\n            </Button>\n        </Form>\n    );\n};","import styled from \"styled-components\";\n\nexport const Item = styled.li`\n    display: flex;\n    justify-content: space-between;\n    font-size: 16px;\n    line-height: 1.8;\n`;\n\nexport const Button = styled.button`\n    margin-left: 20px;\n    width: 80px;\n    height: 24px;\n    border: 2px solid darkgray;\n    border-radius: 4px;\n    cursor: pointer;\n    font-weight: bold;    \n\n      &:hover {\n        box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n        color: white;\n        background-color: green;\n        border: 2px solid transparent;\n    }\n`;","import PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/contacts/contactThunk\";\nimport { toast } from \"react-toastify\";\nimport { Item, Button } from \"components/ContactItem/ContactItem.styled\";\n\nexport const ContactItem = ({ contact }) => {\n    const { id, name, phone } = contact;\n    const dispatch = useDispatch();\n\n    const handleDelete = () => { \n        dispatch(deleteContact(id));\n        const notifyInfo = (message) => toast.info(message);\n        notifyInfo(`Deleted contact \"${name}\"`);\n    };\n\n    return (\n        <Item>\n            {name}: {phone}\n            <Button\n                type=\"button\"\n                onClick={handleDelete}>\n                Delete\n            </Button>\n        </Item>\n    )\n};\n\nContactItem.propTypes = {\n    contact: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        phone: PropTypes.string.isRequired,\n    })\n};","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/contactThunk\";\nimport { selectLoadinStatus, selectErrorStatus, selectFiltredContacts } from \"redux/contacts/contactsSelectors\";\nimport { ThreeDots } from \"react-loader-spinner\";\nimport { ContactItem } from \"components/ContactItem/ContactItem\";\nimport { toast } from \"react-toastify\";\n\nexport const ContactList = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectFiltredContacts);\n    const isLoading = useSelector(selectLoadinStatus);\n    const error = useSelector(selectErrorStatus);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    \n    if (error) {\n        const notifyError = (message) => toast.error(message);\n        notifyError(error);\n        return;\n    };\n\n    return (\n        <>\n            {isLoading && !error && <ThreeDots \n                height=\"80\" \n                width=\"80\" \n                radius=\"9\"\n                color=\"#4fa94d\" \n                ariaLabel=\"three-dots-loading\"\n                wrapperStyle={{\"justifyContent\":\"center\"}}\n                wrapperClassName=\"\"\n                visible={true}\n                />}\n\n            {contacts.length && !isLoading && !error && \n                (<ul>\n                    {contacts.map(contact => (\n                        <ContactItem\n                            key={contact.id}\n                            contact={contact}\n                        />\n                    ))}\n                </ul>)}\n\n            {!contacts.length && !isLoading && !error && <p>Contacts not found</p>}\n        </>\n    );\n};\n","import styled from \"styled-components\";\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 20px;\n`;\n\nexport const LabelName = styled.span`\n   margin-bottom: 20px;\n   font-weight: bold;\n`;\n\nexport const Input = styled.input`\n    width: 300px;\n    height: 30px;\n`;","import { useDispatch } from \"react-redux\";\nimport { setFilter } from \"redux/contacts/filterSlice\";\nimport { Label, LabelName, Input } from \"components/Filter/Filter.styled\";\n\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    \n    const handleFilterChange = event => dispatch(setFilter(event.target.value));\n\n    return (\n        <Label>\n            <LabelName>\n                Find contacts by name\n            </LabelName>\n            <Input type=\"text\" onChange={handleFilterChange}></Input>\n        </Label>\n    );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.main`\n    margin-top: 40px;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 20px;\n    width: 500px;\n    border-radius: 4px;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n`;\n\nexport const TitlePhonebook = styled.h1`\n    margin-bottom: 20px;\n`;\n\nexport const TitleContacts = styled.h2`\n    margin-bottom: 20px;\n`;","import { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport { Wrapper, TitlePhonebook, TitleContacts } from \"pages/Contacts/Contacts.styled\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst Contacts = () => {\n  return (\n    <Wrapper>\n      <TitlePhonebook>Phonebook</TitlePhonebook>\n      <ContactForm />\n      <TitleContacts>Contacts</TitleContacts>\n      <Filter />\n      <ContactList />\n      <ToastContainer />\n    </Wrapper>\n  ); \n};\n\nexport default Contacts;"],"names":["selectContacts","state","contacts","items","selectLoadinStatus","isLoading","selectErrorStatus","error","selectFiltredContacts","createSelector","filter","contact","name","toLowerCase","includes","Form","styled","Label","LabelName","Input","Button","ContactForm","useSelector","dispatch","useDispatch","onSubmit","event","preventDefault","form","target","elements","value","phone","message","nameFinded","find","toast","contactInList","addContact","reset","type","pattern","title","required","Item","ContactItem","id","onClick","deleteContact","ContactList","useEffect","fetchContacts","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","length","map","Filter","onChange","setFilter","Wrapper","TitlePhonebook","TitleContacts"],"sourceRoot":""}